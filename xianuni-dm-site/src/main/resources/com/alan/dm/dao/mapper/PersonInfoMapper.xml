<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.alan.dm.dao.mapper.PersonInfoMapper">

    <sql id="OUT_TABLE">tb_person</sql>
    <sql id="TABLE">tb_orgnization</sql>
    <sql id="ADMIN_TABLE">tb_admin</sql>
    <sql id="COMMITTEE_TABLE">tb_org_committee</sql>

    <resultMap id="ORG_INFO" type="com.alan.dm.entity.Orgnization">
        <id property="id" column="orgId"/>
        <result property="name" column="orgName"/>
    </resultMap>

    <resultMap id="OUT_INFO" type="com.alan.dm.entity.Person">
        <id property="id" column="id"/>
        <result property="name" column="personName"/>
        <result property="createTime" column="createTime"/>
        <result property="number" column="number"/>
        <result property="status" column="personStatus"/>
        <association property="orgnization" column="orgId" javaType="com.alan.dm.entity.Orgnization" resultMap="ORG_INFO"/>
    </resultMap>

    <insert id="insert" useGeneratedKeys="true" keyColumn="id" keyProperty="person.id">
        INSERT INTO
        <include refid="OUT_TABLE"/>
        (orgId,name,status,type,number,idNumber,sex,nation,degree,password,birth,createTime,personDesc)
        VALUES(#{person.orgnization.id},#{person.name},#{person.status},#{person.type},#{person.number},#{person.idNumber},#{person.sex},#{person.nation},#{person.degree},#{person.password},#{person.birth},#{person.createTime},#{person.personDesc})
    </insert>

    <update id="setStatus">
        UPDATE <include refid="OUT_TABLE"/>
        SET status=#{status},updateTime=#{updateTime}
        WHERE id=#{personId}
    </update>

    <delete id="delete">
        DELETE  FROM <include refid="OUT_TABLE"/>
        WHERE id=#{person.id}
    </delete>

    <select id="getByCondition" resultMap="OUT_INFO">
        SELECT
          O.id AS id,
          P.name AS orgName,
          P.id AS orgId,
          O.name AS personName,
          O.createTime AS createTime,
          O.number AS number,
          O.status AS personStatus
        FROM  <include refid="OUT_TABLE" /> O LEFT JOIN <include refid="TABLE"/> P
        ON O.orgId=P.id
        <where>
            <if test="condition.orgList != null">
                O.orgId in
                <foreach collection="condition.orgList" index="index" item="orgList" open="("
                         separator="," close=")">
                    #{orgList}
                </foreach>
            </if>
            <if test="condition.status != null">
                AND O.status in
                <foreach collection="condition.status" index="index" item="status" open="("
                         separator="," close=")">
                    #{status}
                </foreach>
            </if>
            <if test="condition.number != null">
                <bind name="patternNumber" value="condition.number+ '%'" />
                AND O.number LIKE #{patternNumber}
            </if>
            <if test="condition.name != null">
                <bind name="patternName" value="condition.name+ '%'" />
                AND O.name LIKE #{patternName}
            </if>
        </where>
        ORDER BY O.updateTime desc,O.createTime desc
        <if test="page!=null">
            LIMIT #{page.current}, #{page.size}
        </if>
    </select>

    <select id="countByCondition" resultType="Integer">
        select count(*)
        FROM  <include refid="OUT_TABLE" /> O LEFT JOIN <include refid="TABLE"/> P
        ON O.orgId=P.id
        <where>
            <if test="condition.orgList != null">
                O.orgId in
                <foreach collection="condition.orgList" index="index" item="orgList" open="("
                         separator="," close=")">
                    #{orgList}
                </foreach>
            </if>
            <if test="condition.status != null">
                AND O.status in
                <foreach collection="condition.status" index="index" item="status" open="("
                         separator="," close=")">
                    #{status}
                </foreach>
            </if>
            <if test="condition.number != null">
                <bind name="patternNumber" value="condition.number+ '%'" />
                AND O.number LIKE #{patternNumber}
            </if>
            <if test="condition.name != null">
                <bind name="patternName" value="condition.name+ '%'" />
                AND O.name LIKE #{patternName}
            </if>
        </where>
    </select>

    <select id="getByNumber" resultType="com.alan.dm.entity.Person">
        SELECT *
        FROM  <include refid="OUT_TABLE" />
        WHERE number=#{number}
    </select>
    <select id="getById" resultType="com.alan.dm.entity.Person">
        SELECT *
        FROM  <include refid="OUT_TABLE" />
        WHERE id=#{id}
    </select>

    <select id="getAdminCandidateList" resultType="com.alan.dm.entity.Person">
        SELECT *
        FROM  <include refid="OUT_TABLE" />
        <where>
            status=5
            <if test="orgList != null">
                AND orgId in
                <foreach collection="orgList" index="index" item="org" open="("
                         separator="," close=")">
                    #{org.id}
                </foreach>
            </if>
            <if test="number != null">
                <bind name="patternName" value="number+ '%'" />
                AND number LIKE #{patternName}
            </if>
            and number not in(
              select distinct(schoolNumber)
              from <include refid="ADMIN_TABLE" />
            )
        </where>
        ORDER BY createTime DESC
        <if test="page!=null">
            LIMIT #{page.current}, #{page.size}
        </if>
    </select>
    <select id="getCommitteeCandidateList" resultType="com.alan.dm.entity.Person">
        SELECT *
        FROM  <include refid="OUT_TABLE" />
        <where>
            status=5
            <if test="orgList != null">
                AND orgId in
                <foreach collection="orgList" index="index" item="org" open="("
                         separator="," close=")">
                    #{org.id}
                </foreach>
            </if>
            <if test="number != null">
                <bind name="patternName" value="number+ '%'" />
                AND number LIKE #{patternName}
            </if>
            and id not in(
            select distinct(personId)
            from <include refid="COMMITTEE_TABLE" />
            )
        </where>
        ORDER BY createTime DESC
        <if test="page!=null">
            LIMIT #{page.current}, #{page.size}
        </if>
    </select>
</mapper>